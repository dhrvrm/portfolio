---
import Layout from '../../layouts/Layout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content, headings } = await post.render();

const formattedDate = new Date(post.data.publishDate).toLocaleDateString(
	'en-US',
	{
		year: 'numeric',
		month: 'long',
		day: 'numeric',
	}
);

const allPosts = await getCollection('blog');
let prevPost, nextPost;

if (post.data.series) {
	const seriesPosts = allPosts
		.filter((p) => p.data.series === post.data.series)
		.sort((a, b) => a.data.seriesPart - b.data.seriesPart);

	const currentIndex = seriesPosts.findIndex((p) => p.slug === post.slug);
	prevPost = seriesPosts[currentIndex - 1];
	nextPost = seriesPosts[currentIndex + 1];
}

const shortBio =
	'Dynamic Frontend Developer specializing in React.js and Next.js. Creating engaging web experiences with modern technologies and beautiful animations.';
---

<Layout title={post.data.title}>
	<article class='container mx-auto px-6 py-16'>
		<nav class='flex mb-8 text-sm' aria-label='Breadcrumb'>
			<ol class='flex items-center space-x-2'>
				<li>
					<a href='/' class='text-gray-500 hover:text-modern-purple'>Home</a>
				</li>
				<li class='text-gray-400'>/</li>
				<li>
					<a href='/blog' class='text-gray-500 hover:text-modern-purple'>Blog</a
					>
				</li>
				<li class='text-gray-400'>/</li>
				<li class='text-modern-purple'>{post.data.title}</li>
			</ol>
		</nav>

		{
			post.data.series && (
				<div class='mb-8 bg-gray-50 dark:bg-gray-800 rounded-lg p-4'>
					<p class='text-sm text-gray-600 dark:text-gray-400 mb-4'>
						Part {post.data.seriesPart} of {post.data.series}
					</p>
					<div class='flex justify-between'>
						{prevPost && (
							<a
								href={`/blog/${prevPost.slug}`}
								class='text-primary-600 hover:text-primary-700 flex items-center gap-2'
							>
								← Previous: {prevPost.data.title}
							</a>
						)}
						{nextPost && (
							<a
								href={`/blog/${nextPost.slug}`}
								class='text-primary-600 hover:text-primary-700 flex items-center gap-2'
							>
								Next: {nextPost.data.title} →
							</a>
						)}
					</div>
				</div>
			)
		}

		<div class='grid grid-cols-1 lg:grid-cols-[1fr_250px] gap-12'>
			<div>
				<header class='mb-12'>
					<div class='flex gap-2 mb-6'>
						{
							post.data.categories.map((category: string) => (
								<span class='bg-gradient-to-r from-modern-purple/10 to-modern-indigo/10 dark:from-modern-purple/20 dark:to-modern-indigo/20 text-modern-purple dark:text-modern-cyan px-4 py-2 rounded-full text-sm font-medium'>
									{category}
								</span>
							))
						}
					</div>
					<h1 class='text-4xl md:text-5xl font-bold mb-6'>{post.data.title}</h1>
					<div class='flex items-end gap-6 text-gray-600 dark:text-gray-400'>
						<div class='flex items-center gap-3'>
							<img
								src={post.data.author.avatar}
								alt={post.data.author.name}
								class='w-10 h-10 rounded-full'
							/>
							<div>
								<p class='font-medium text-gray-900 dark:text-gray-100'>
									{post.data.author.name}
								</p>
								<p class='text-sm'>{post.data.author.bio}</p>
							</div>
						</div>
						<span>•</span>
						<time datetime={post.data.publishDate}>{formattedDate}</time>
						<span>•</span>
						<span>{post.data.readingTime} min read</span>
					</div>
				</header>

				<div class='prose prose-lg dark:prose-invert max-w-none'>
					<Content />
				</div>
			</div>

			<aside class='hidden lg:block'>
				<TableOfContents headings={headings} />
			</aside>
		</div>

		{
			post.data.series && (
				<div class='mb-8 bg-gray-50 dark:bg-gray-800 rounded-lg p-4'>
					<p class='text-sm text-gray-600 dark:text-gray-400 mb-4'>
						Part {post.data.seriesPart} of {post.data.series}
					</p>
					<div class='flex justify-between'>
						{prevPost && (
							<a
								href={`/blog/${prevPost.slug}`}
								class='text-primary-600 hover:text-primary-700 flex items-center gap-2'
							>
								← Previous: {prevPost.data.title}
							</a>
						)}
						{nextPost && (
							<a
								href={`/blog/${nextPost.slug}`}
								class='text-primary-600 hover:text-primary-700 flex items-center gap-2'
							>
								Next: {nextPost.data.title} →
							</a>
						)}
					</div>
				</div>
			)
		}

		<div class='mt-16 border-t dark:border-gray-800 pt-8'>
			<div class='bg-gray-50 dark:bg-gray-800 rounded-lg p-8'>
				<div class='flex items-start gap-6'>
					<img
						src={post.data.author.avatar}
						alt={post.data.author.name}
						class='w-24 h-24 rounded-full'
					/>
					<div class='flex-1'>
						<h3 class='text-xl font-semibold mb-2'>{post.data.author.name}</h3>
						<p class='text-gray-600 dark:text-gray-400 mb-4'>{shortBio}</p>
						<div class='flex gap-4'>
							{
								Object.entries(post.data.author.social).map(
									([platform, url]) => (
										<a
											href={url}
											target='_blank'
											rel='noopener noreferrer'
											class='text-gray-600 dark:text-gray-400 hover:text-primary-600'
										>
											<span class='capitalize'>{platform}</span>
										</a>
									)
								)
							}
						</div>
						<div class='mt-4'>
							<a
								href='/contact'
								class='inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors'
							>
								Get in Touch →
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</article>
</Layout>
